syntax = "proto3";

service TwoPhaseCommit {
	rpc Tentative(TentativeRequest) returns (TentativeReply);
	rpc Commit(CommitRequest) returns (CommitReply);
}

// rever o que Ã© preciso enviar em cada mensagem
message TentativeRequest {
	int32 processId = 1;
	int32 sequenceNumber = 2;
}
message TentativeReply {
	bool success = 1;
}

message CommitRequest {
	int32 processId = 1;
	int32 sequenceNumber = 2;
}
message CommitReply {
	bool success = 1;
}

service Cleanup {
	rpc Cleanup(ListPendingRequestsRequest) returns (ListPendingRequestsReply);
}

message ListPendingRequestsRequest {
	int32 lastKnownSequenceNumber = 1;
}

message ListPendingRequestsReply{
	// Empty ?
}
